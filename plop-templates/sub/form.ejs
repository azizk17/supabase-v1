<%- include('../functions'); -%>
<% for(fi of definition.properties) { %> 
{/*
* @property <%= fi.name %>
* @type <%= fi.type %> <%= fi.description ?  `"\n*   ${fi.description}` : '' _%> 
*/}
<Form.Item label={translate("<%= toLowerCase(definition.__moduleName) %>:fields.<%= fi.name %>", "<%= fi.name %>")} name="<%= fi.name %>" rules={[{required: <%= fi.required %>}]}>
    
    <%  if (fi.hasOwnProperty("relation") && Object.keys(fi.relation).length) { %>
        <%# This might be foreign key %>
      <%  const {resource, column} = fi.relation; -%>
      <%  if (resource && column) {  -%>
            <Select  {...<%=  selectPropName(resource) %>}  <%= fi.default ? `defaultValue={${fi.default}}` : '' %> />
      <% } -%>
    <% } -%>

    <% if (fi.type === 'boolean'){ %>
        <Checkbox <%= fi.default ? `defaultValue={${fi.default}}` : '' %> >{translate("true")}</Checkbox>
    <% } -%>

    <% if (fi.type === 'Date'){ %>
        <DatePicker <%= fi.default ? `defaultValue={${fi.default}}` : '' %> />
    <% } -%>
    <% if (fi.options){ %>
        <Select <%= fi.default ? `defaultValue={${fi.default}}` : '' %>>
        {Object.keys(<%= fi.type %>).map(option => (
            <Select.Option key={option} value={option}>
                {translate(`enums.<%= fi.type %>.${option}`, `${option}`)}
            </Select.Option>
        ))}
        </Select>
    <% } -%>
</Form.Item>
<% } -%>